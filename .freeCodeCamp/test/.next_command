git remote set-url origin https://github.com/Buckethouse/fcc-periodic-table.git
git branch -M main
git push -u origin main
git add .
git commit -m "initial commit"
git checkout -b solution
git add .
git commit -m "initial branch commit"
git push --set-upstream origin solution
__vsc_prompt_cmd_original
export GIT_EDITOR=/usr/bin/nano
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
PATH="$HOME/.local/bin:$PATH"
[ -e /home/gitpod/.nix-profile/etc/profile.d/nix.sh ]
. /home/gitpod/.nix-profile/etc/profile.d/nix.sh
[[ -s "$HOME/.rvm/scripts/rvm" ]]
source "$HOME/.rvm/scripts/rvm"
[[ -n $SSH_CONNECTION ]]
'/ide/node' -p '"af9f90c4692f" + JSON.stringify(process.env) + "af9f90c4692f"'
export GIT_EDITOR=/usr/bin/nano
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
export GIT_EDITOR=/usr/bin/nano
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
PATH="$HOME/.local/bin:$PATH"
[ -e /home/gitpod/.nix-profile/etc/profile.d/nix.sh ]
. /home/gitpod/.nix-profile/etc/profile.d/nix.sh
[[ -s "$HOME/.rvm/scripts/rvm" ]]
source "$HOME/.rvm/scripts/rvm"
[[ -n $SSH_CONNECTION ]]
'/ide/node' -p '"47df422d9b92" + JSON.stringify(process.env) + "47df422d9b92"'
export GIT_EDITOR=/usr/bin/nano
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
psql --username=freecodecamp --dbname=periodic_table
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
mkdir periodic_table
cd periodic_table
git init
git checkout -b main
git commit -m "Initial commit"
touch element.sh
touch fix_database.sh
chmod +x element.sh
chmod +x fix_database.sh
git commit -m "refactor: scripts & permissions"
git add .
git commit -m "refactor: scripts & permissions"
./fix_database.sh
cd ..
./periodic_table/fix_database.sh
cd periodic_table
git status
git commit -m "fix: periodic table database mistakes"
git add .
git commit -m "feat: created standalone script for periodic table correct"
git status
git add .
git commit -m "fix: updated spelling of celsius"
git log --oneline
git branch
git checkout -b feat/fix-database
branch
git branch
git checkout main
git revert HEAD
git checkout feat/fix-database
git status
git checkout main
git add .
git commit -m "fix: typo in Fluorine entry"
git checkout feat/fix-database
git rebase main
git checkout main
git revert HEAD
git log --oneline
git checkout feat/fix-database
git checkout main
git reset --root
git rebase --interactive --root
git log --oneline
git branch
git checkout feat/fix-database
git log --oneline
git checkout main
git add .
git commit -m "Initial commit"
touch element.sh
touch fix_database.sh
git add .
git commit -m "Initial commit"
git log --oneline
chmod +x element.sh
chmod +x fix_database.sh
git commit -m "refactor: updated permissions on bash files"
git add .
git commit -m "refactor: updated permissions on bash files"
git log --oneline
git branch
git checkout feat/fix-database
git checkout -b chore/copy-if-lost
git checkout feat/fix-database
git rebase main
git branch
git log --oneline
git branch -d chore/copy-if-lost
git branch -D chore/copy-if-lost
git checkout main
git checkout feat/fix-database
git status
git checkout main
git merge feat/fix-database
git log --oneline
git branch -d feat/fix-database
git log --oneline
git checkout -b feat/element-script
man psql
git add .
git commit -m "feat: element script v0 completed"
./element.sh
./element.sh
./element.sh 1
./element.sh 1 H
./element.sh H
git commit -m "test: initial tests run; minor fix"
git add .
git commit -m "test: initial tests run; minor fix"
git checkout main
git branch
git merge feat/element-script
git log --oneline
git branch -d feat/element-script
